## Rule index for results & benchmark automated exploration in pipeline
##
## @zgr2788
##
##
## Description:
## This file includes the rules which explore the resulting prediction matrices
## from the deconvolution stage of the pipeline. It also includes the rule
## which summarizes the computational benchmark of the entire pipeline,
## which was gauged through snakemake's 'benchmark' directive.
##
##
##
##
##
##
##
##
##
##

rule exploreResults:
    input:
        getMethods('{sample}'),
        props = getBulks('{sample}')[1] #Only proportions needed

    output:
        getSelectedMetrics('{sample}')

    conda:
        "env.yaml"

    params:
        metrics = config['resMetrics'],
        min_p = config['minkowski_p']

    resources:
        mem_mb=getMB(config['mem_gb']['resultsExp'])

    shell:
        "Rscript Modules/Res_explore/Res_explore.R {input.props} {wildcards.sample} {params.metrics} {params.min_p}"


rule exploreBenchmarks:
    input:
        getMethods('{sample}')

    output:
        getBenchmarks('{sample}')

    conda:
        "env.yaml"

    resources:
        mem_mb=getMB(config['mem_gb']['resultsExp'])

    shell:
        "Rscript Modules/Res_explore/Benchmarks_explore.R {wildcards.sample}"



rule visualizeResults:
    input:
        getSelectedMetrics('{sample}')

    output:
        getPlots('{sample}')

    conda:
        "env.yaml"

    resources:
        mem_mb=getMB(config['mem_gb']['resultsExp'])

    shell:
        "Rscript Modules/Res_explore/Metrics_viz.R {wildcards.sample}"



rule vioplotResults:
    input:
        getMethods('{sample}'),
        props = getBulks('{sample}')[1] #Only proportions needed

    output:
        getVioPlots('{sample}')

    conda:
        "env.yaml"

    params:
        metrics = config['resMetrics'],
        min_p = config['minkowski_p']

    resources:
        mem_mb=getMB(config['mem_gb']['resultsExp'])

    shell:
        "Rscript Modules/Res_explore/Res_vioplot.R {input.props} {wildcards.sample} {params.metrics} {params.min_p}"



rule sumRun:
    input:
        getPlots('{sample}'),
        getVioPlots('{sample}'),
        getBenchmarks('{sample}')

    output:
        getRunSums('{sample}')

    params:
        mode = config['pbulkParam']['pbulkMode'],
        cellCount = config['pbulkParam']['cellCount'],
        nSamples = config['pbulkParam']['nSamples'],
        propVar = config['pbulkParam']['propVar'],
        sampleCT = config['pbulkParam']['sampleCT'],
        scaleT = config['stParam']['scaleT'],
        scaleC = config['stParam']['scaleC'],
        transform = config['stParam']['transform']

    resources:
        mem_mb=getMB(config['mem_gb']['resultsExp'])

    shell:
        "bash Modules/Res_explore/extractRun.sh {wildcards.sample} {params}"
